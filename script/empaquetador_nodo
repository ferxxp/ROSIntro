#!/usr/bin/env python
import rospy
from std_msgs.msg import String
from interaccion.msg import pos_usuario
from interaccion.msg import inf_personal_usuario
from interaccion.msg import usuario
import config


def callback1(data):
    rospy.loginfo(rospy.get_caller_id() + "I heard %s", data.data)
    config.sdmg.usuario=data.data
    config.be=True
def callback2(data):
    rospy.loginfo(rospy.get_caller_id() + "I heard %s", (data.first_name+str(data.age)+str(data.language)))
    config.sdmg.inf_personal=data
    config.bi=True
def callback3(data):
    rospy.loginfo(rospy.get_caller_id() + "I heard %s", (data.x+data.y+data.z))
    config.sdmg.posicion=data
    config.bp=True

def listener():
    # In ROS, nodes are uniquely named. If two nodes with the same
    # name are launched, the previous one is kicked off. The
    # anonymous=True flag means that rospy will choose a unique
    # name for our 'listener' node so that multiple listeners can
    # run simultaneously.
    i=inf_personal_usuario()
    p=pos_usuario()
    e=String()
    rospy.init_node('listener', anonymous=True)
    rospy.Subscriber("emocion_topic", String, callback1)
    rospy.Subscriber("inf_pers_topic", inf_personal_usuario, callback2)
    rospy.Subscriber("pos_usuario_topic", pos_usuario, callback3)
    pub = rospy.Publisher('user_topic', usuario, queue_size=10)
    rate = rospy.Rate(10)
    sendms=usuario()
    # spin() simply keeps python from exiting until this node is stopped

    while not rospy.is_shutdown():
        #try:
        if config.bi and config.bp and config.be:
            rospy.loginfo(rospy.get_caller_id() + "Sending valoration")
            pub.publish(config.sdmg)
            config.sdmg.usuario=None
            config.sdmg.posicion=None
            config.sdmg.inf_personal=None
            config.bi=False
            config.bp=False
            config.be=False
        #except:
        #    break
        rate.sleep()


if __name__ == '__main__':
    listener()
