#!/usr/bin/env python
# -*- coding: utf-8 -*-
import rospy
from std_msgs.msg import String, Bool
from interaccion.msg import pos_usuario, inf_personal_usuario, usuario
from interaccion.srv import multiply
import configclock
import os

def multiplyper2srv(x):
    rospy.wait_for_service('multiplicar')
    try:
        rospy.loginfo("\033[1;32;40m"+rospy.get_caller_id() +"\033[0m"+ ": pidiendo servicio")
        add_two_ints = rospy.ServiceProxy('multiplicar', multiply)
        resp1 = add_two_ints(x)
        return resp1.resultado
    except rospy.ServiceException, e:
        rospy.logerr("Service call failed: %s"%e)
def sendtimer():
    if not configclock.sent_first_message:
        configclock.sent_first_message=True
        configclock.pubstart.publish(configclock.msgclock)
    else:
        configclock.pubreset.publish(configclock.msgclock)
def print_and_read(toread,tospeak):
    rospy.loginfo("\033[1;32;40m"+rospy.get_caller_id() +"\033[0m"+toread)
    command = "espeak \"" + tospeak +"\" -v es"
    os.system(str(command));
def callback1(data):
    servresp=str(multiplyper2srv(data.inf_personal.age))
    ap=""
    ap=ap+"\n"+("\033[1;33;40m"+"Nombre:\t"+"\033[1;36;40m"+data.inf_personal.first_name+"\n")
    ap=ap+"\n"+("\033[1;33;40m"+"Edad :\t"+"\033[1;36;40m"+str(data.inf_personal.age)+"\n")
    ap=ap+"\n"+("\033[1;33;40m"+"Idiomas :")+"\033[1;36;40m"
    for lan in data.inf_personal.language:
        ap=ap+"\n"+(lan)+"\n"
    ap=ap+"\n"+("\033[1;33;40m"+"Se encuentra :\t"+"\033[1;36;40m"+str(data.posicion.x)+" / "+str(data.posicion.y)+" / "+str(data.posicion.z)+"\n")
    ap=ap+"\n"+("\033[1;33;40m"+"Opina : \n" +"\033[1;36;40m"+data.usuario+"\n")
    ap=ap+"\n"+("\033[1;33;40m"+"Número secreto:")+"\033[1;36;40m"
    ap=ap+"\n"+(servresp)+"\n"
    ap=ap+"\n"+("______________________")+"\033[0m"

    ar=""
    ar=ar+"\n"+("Nombre:\t"+data.inf_personal.first_name+"\n")
    ar=ar+"\n"+("Edad :\t"+str(data.inf_personal.age)+"\n")
    ar=ar+"\n"+("Idiomas :")
    for lan in data.inf_personal.language:
        ar=ar+"\n"+(lan)+"\n"
    ar=ar+"\n"+("Se encuentra :\t"+str(data.posicion.x)+" / "+str(data.posicion.y)+" / "+str(data.posicion.z)+"\n")
    ar=ar+"\n"+("Opina : \n" +data.usuario+"\n")
    ar=ar+"\n"+("Número secreto:")
    ar=ar+"\n"+servresp+"\n"
    ar=ar+"\n"+("______________________")
    sendtimer()
    print_and_read(ap,ar)


def callback2(data):
    if data.data:
        a=("\033[1;34;40m"+"\nEl reloj sigue en marcha\n"+"\033[0m")
        rospy.loginfo("\033[1;32;40m"+rospy.get_caller_id() +"\033[0m"+a)
        command = "espeak \"" + "El reloj sigue en marcha" +"\" -v es"
        os.system(str(command));

def screen():
    rospy.init_node('screen', anonymous=True)
    rospy.Subscriber("user_topic", usuario, callback1)
    rospy.Subscriber("still_alive", Bool, callback2)
    rospy.spin()
if __name__ == '__main__':
    screen()
