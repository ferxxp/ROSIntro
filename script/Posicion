#!/usr/bin/env python
# -*- coding: utf-8 -*-
# license removed for brevity
import rospy
from Tkinter import *
import tkMessageBox
import ScrolledText as sct
from interaccion.msg import pos_usuario



def readtext(txt1,txt2,txt3,pub,rospy):
    #Funcion creada para enviar los datos del formulario al topico correspondiente
    #try:
        a=int(txt1.get())
        b=int(txt2.get())
        c=int(txt3.get())
        hello_str=pos_usuario()
        hello_str.x=a
        hello_str.y=b
        hello_str.z=c
        rospy.loginfo("\033[1;32;40m"+rospy.get_caller_id() +"\033[0m"+" envia: "+"\033[1;36;40m"+str(hello_str) +"\033[0m")
        pub.publish(hello_str)
        createMessBox("Success","Datos enviados.")
        txt1.delete('0', END)
        txt2.delete('0', END)
        txt3.delete('0', END)
    # except:
    #
    #     createMessBox("Error","Por favor compruebe los datos introducidos.")
def createMessBox(a,b):
    #funcion para la salida de error o success del envio de la informacion
    tkMessageBox.showinfo(a,b)
def talker():
    #main metodo de la aplicación para cumplir estandares

    #inicialización
    pub = rospy.Publisher('pos_usuario_topic', pos_usuario, queue_size=10)
    rospy.init_node('Posicion', anonymous=True)
    rate = rospy.Rate(40) # 40hz
    window = Tk()
    window.title("Position app")
    label1=Label(text='Posicion X:')
    label1.grid(column=0, row=0,padx=10, pady=10)
    txt1 = Entry(window,width=10)
    txt1.grid(column=1, row=0,padx=10, pady=10)
    label1=Label(text='Posicion Y:')
    label1.grid(column=0, row=2,padx=10, pady=10)
    txt2 = Entry(window,width=10)
    txt2.grid(column=1, row=2,padx=10, pady=10)
    label1=Label(text='Posicion Z:')
    label1.grid(column=0, row=4,padx=10, pady=10)
    txt3 = Entry(window,width=10)
    txt3.grid(column=1, row=4,padx=10, pady=10)
    btn = Button(window, text="Enviar", command= lambda:readtext(txt1,txt2,txt3,pub,rospy))
    btn.grid(column=1, row=6,padx=10, pady=10)

    #loop de la aplicación
    while not rospy.is_shutdown():
        try:
            window.update()
            window.update_idletasks()
            rate.sleep()
        except:
            break


if __name__ == '__main__':
    try:
        talker()
    except rospy.ROSInterruptException:
        pass
